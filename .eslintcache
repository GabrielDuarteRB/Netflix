[{"/home/gabriel/Documentos/Projetos-pessoais/Netflix/netflix/src/index.js":"1","/home/gabriel/Documentos/Projetos-pessoais/Netflix/netflix/src/App.js":"2","/home/gabriel/Documentos/Projetos-pessoais/Netflix/netflix/src/Tmdb.js":"3","/home/gabriel/Documentos/Projetos-pessoais/Netflix/netflix/src/components/MovieRow.js":"4","/home/gabriel/Documentos/Projetos-pessoais/Netflix/netflix/src/components/FeaturedMovie.js":"5","/home/gabriel/Documentos/Projetos-pessoais/Netflix/netflix/src/components/Header.js":"6"},{"size":197,"mtime":1611241190777,"results":"7","hashOfConfig":"8"},{"size":2018,"mtime":1611370353618,"results":"9","hashOfConfig":"8"},{"size":2635,"mtime":1611328674151,"results":"10","hashOfConfig":"8"},{"size":1732,"mtime":1611417275658,"results":"11","hashOfConfig":"8"},{"size":1695,"mtime":1611417711468,"results":"12","hashOfConfig":"8"},{"size":679,"mtime":1611365403702,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"pbgzwm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"16"},"/home/gabriel/Documentos/Projetos-pessoais/Netflix/netflix/src/index.js",[],["30","31"],"/home/gabriel/Documentos/Projetos-pessoais/Netflix/netflix/src/App.js",["32","33"],"import React, { useEffect, useState } from 'react';\nimport './App.css'\nimport Tmdb from './Tmdb'\nimport MovieRow from './components/MovieRow.js'\nimport FeaturedMovie from './components/FeaturedMovie.js'\nimport Header from './components/Header.js'\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null)\n  const [blackHeader, setBlackHeader] = useState(false)\n  \n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegando a lista\n      let list = await Tmdb.getHomeList();\n      setMovieList(list)\n\n      //Pegando filme destaque\n      let originals = list.filter(i => i.slug === 'originals')\n      let randomChosen = Math.floor(Math.random() * (originals[0].item.results.length -1))\n      let chosen = originals[0].item.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\n      setFeaturedData(chosenInfo)\n    }\n  \n    loadAll()\n  }, [])\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if(window.scrollY > 10) {\n        setBlackHeader(true)\n      }else{\n        setBlackHeader(false)\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener)\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener)\n    }\n  }, [])\n  \n  return(\n    <div className=\"page\">\n\n      <Header black={blackHeader}/>\n\n      {featuredData && \n      <FeaturedMovie item={featuredData} />\n      }\n      \n      <section className=\"lists\">\n        {movieList.map((item, key)=> (\n            <MovieRow key={key} title={item.title} items={item.item}/>\n            ))\n          \n        }\n      </section>\n\n      <footer>\n        Feito por Gabriel Duarte!<br />\n        Direitos de imagem para Netflix <br/>\n        Dados pegos do site themoviedb.org\n      </footer>\n\n      {\n        movieList.length <= 0 &&\n        <div className=\"loading\">\n          <img src=\"https://i.pinimg.com/originals/f9/0f/76/f90f7689233948005f465d98ead56d44.gif\" />\n        </div>\n      }\n    </div>\n  )\n}","/home/gabriel/Documentos/Projetos-pessoais/Netflix/netflix/src/Tmdb.js",["34"],"const API_KEY = 'fddb1de4fc039741c199894c2a097895'\nconst URL_BASE = 'https://api.themoviedb.org/3'\n\n/*\n- originais da netflix\n- recomendados \n- em alta\n- ação\n- comédia\n- terror\n- romance\n- documentários\n*/\n\nconst basicFetch = async(endpoint) => {\n    const req = await fetch(`${URL_BASE}${endpoint}`);\n    const json = await req.json();\n    return json\n}\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Originais do Netflix',\n                item: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title: 'Recomendados para você',\n                item: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'toprated',\n                title: 'Em Alta',\n                item: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title: 'Ação',\n                item: await basicFetch(`/discover/movie?with_generes=28&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title: 'Comédia',\n                item: await basicFetch(`/discover/movie?with_generes=35&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title: 'Terror',\n                item: await basicFetch(`/discover/movie?with_generes=27&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                item: await basicFetch(`/discover/movie?with_generes=10749&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'documentary',\n                title: 'Documentarios',\n                item: await basicFetch(`/discover/movie?with_generes=99&language=pt-BR&api_key=${API_KEY}`)\n            },\n\n        ]\n    },\n\n    getMovieInfo: async (movieId, type) => {\n        let info = {}\n\n        if(movieId) {\n            switch(type) {\n                case 'movie':\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n                break;\n                case 'tv':\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n                break;\n                default:\n                    info = null;\n                break\n            }\n        }\n\n        return info\n    }\n}","/home/gabriel/Documentos/Projetos-pessoais/Netflix/netflix/src/components/MovieRow.js",["35"],"/home/gabriel/Documentos/Projetos-pessoais/Netflix/netflix/src/components/FeaturedMovie.js",["36"],"/home/gabriel/Documentos/Projetos-pessoais/Netflix/netflix/src/components/Header.js",["37"],"import React from 'react';\nimport './Header.css';\n\nexport default ({black}) => {\n    return (\n        <header className={black ? 'black' : ''}>\n            <div className=\"header--logo\">\n                <a href=\"/\">\n                    <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\" alt=\"Netflix\"/>\n                </a>\n            </div>\n            <div className=\"header--user\">\n                <a href=\"/\">\n                    <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\" alt=\"Usuário\"/>\n                </a>\n            </div>\n        </header>\n    )\n}",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":8,"column":1,"nodeType":"44","endLine":78,"endColumn":2},{"ruleId":"45","severity":1,"message":"46","line":73,"column":11,"nodeType":"47","endLine":73,"endColumn":101},{"ruleId":"42","severity":1,"message":"48","line":20,"column":1,"nodeType":"44","endLine":86,"endColumn":2},{"ruleId":"42","severity":1,"message":"43","line":6,"column":1,"nodeType":"44","endLine":53,"endColumn":2},{"ruleId":"42","severity":1,"message":"43","line":4,"column":1,"nodeType":"44","endLine":40,"endColumn":2},{"ruleId":"42","severity":1,"message":"43","line":4,"column":1,"nodeType":"44","endLine":19,"endColumn":2},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Assign object to a variable before exporting as module default","no-global-assign","no-unsafe-negation"]